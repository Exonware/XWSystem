# Dependabot configuration for xSystem
# Aerospace & Defense Standards Compliance

version: 2
updates:
  # Python dependencies
  - package-ecosystem: "pip"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "09:00"
      timezone: "UTC"
    open-pull-requests-limit: 10
    reviewers:
      - "@exonware/security-team"
      - "@exonware/maintainers"
    assignees:
      - "@exonware/maintainers"
    commit-message:
      prefix: "deps"
      include: "scope"
    labels:
      - "dependencies"
      - "security"
      - "automated"
    ignore:
      # Ignore major version updates for critical dependencies
      - dependency-name: "cryptography"
        update-types: ["version-update:semver-major"]
      - dependency-name: "pycryptodome"
        update-types: ["version-update:semver-major"]
      - dependency-name: "requests"
        update-types: ["version-update:semver-major"]
      - dependency-name: "urllib3"
        update-types: ["version-update:semver-major"]
    # Security updates only for critical dependencies
    allow:
      - dependency-type: "direct"
      - dependency-type: "indirect"
    # Group minor and patch updates
    groups:
      security-updates:
        patterns:
          - "*"
        update-types:
          - "security"
      minor-updates:
        patterns:
          - "*"
        update-types:
          - "minor"
        exclude-patterns:
          - "cryptography"
          - "pycryptodome"
      patch-updates:
        patterns:
          - "*"
        update-types:
          - "patch"

  # GitHub Actions
  - package-ecosystem: "github-actions"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "10:00"
      timezone: "UTC"
    open-pull-requests-limit: 5
    reviewers:
      - "@exonware/security-team"
      - "@exonware/maintainers"
    assignees:
      - "@exonware/maintainers"
    commit-message:
      prefix: "ci"
      include: "scope"
    labels:
      - "dependencies"
      - "github-actions"
      - "automated"
    # Group all GitHub Actions updates
    groups:
      github-actions:
        patterns:
          - "*"

  # Python security updates (separate for immediate attention)
  - package-ecosystem: "pip"
    directory: "/"
    schedule:
      interval: "daily"
      time: "06:00"
      timezone: "UTC"
    open-pull-requests-limit: 5
    reviewers:
      - "@exonware/security-team"
    assignees:
      - "@exonware/security-team"
    commit-message:
      prefix: "security"
      include: "scope"
    labels:
      - "dependencies"
      - "security"
      - "critical"
      - "automated"
    # Only security updates
    update-types:
      - "security"
    # No grouping for security updates
    groups: {}

  # Docker dependencies (if applicable)
  - package-ecosystem: "docker"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "11:00"
      timezone: "UTC"
    open-pull-requests-limit: 3
    reviewers:
      - "@exonware/security-team"
      - "@exonware/maintainers"
    assignees:
      - "@exonware/maintainers"
    commit-message:
      prefix: "docker"
      include: "scope"
    labels:
      - "dependencies"
      - "docker"
      - "automated"
    # Group Docker updates
    groups:
      docker:
        patterns:
          - "*"

  # npm dependencies (if applicable)
  - package-ecosystem: "npm"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "12:00"
      timezone: "UTC"
    open-pull-requests-limit: 5
    reviewers:
      - "@exonware/security-team"
      - "@exonware/maintainers"
    assignees:
      - "@exonware/maintainers"
    commit-message:
      prefix: "npm"
      include: "scope"
    labels:
      - "dependencies"
      - "npm"
      - "automated"
    # Group npm updates
    groups:
      npm:
        patterns:
          - "*"

# Global configuration
registries:
  # Custom registry configuration if needed
  # python-index:
  #   type: "python-index"
  #   url: "https://pypi.org/simple"
  #   username: "${{ secrets.PYPI_USERNAME }}"
  #   password: "${{ secrets.PYPI_PASSWORD }}"

# Security policy
security-updates-only: false
# We want both security and regular updates for comprehensive maintenance

# Vulnerability alerts
vulnerability-alerts:
  enabled: true
  auto-dismiss: false
  # Never auto-dismiss vulnerabilities for aerospace/defense applications

# Update strategy
update-strategy:
  # For security updates
  security:
    strategy: "auto"
    auto-merge: false
    require-review: true
  
  # For regular updates
  regular:
    strategy: "auto"
    auto-merge: false
    require-review: true

# Branch naming
branch-naming:
  prefix: "dependabot"
  separator: "/"
  include-package-ecosystem: true
  include-directory: true

# Commit message format
commit-message:
  prefix: "deps"
  include: "scope"
  format: "conventional"

# Pull request configuration
pull-request:
  # Title format
  title: "Bump {{dependency-name}} from {{current-version}} to {{new-version}}"
  
  # Body template
  body: |
    ## Dependency Update
    
    **Package:** {{dependency-name}}
    **Current Version:** {{current-version}}
    **New Version:** {{new-version}}
    **Update Type:** {{update-type}}
    
    ## Changes
    
    {{#if changes}}
    {{#each changes}}
    - {{this}}
    {{/each}}
    {{else}}
    No changes documented.
    {{/if}}
    
    ## Security Impact
    
    {{#if security-vulnerabilities}}
    **Security Vulnerabilities Fixed:**
    {{#each security-vulnerabilities}}
    - {{this}}
    {{/each}}
    {{else}}
    No security vulnerabilities identified.
    {{/if}}
    
    ## Testing Required
    
    - [ ] Unit tests pass
    - [ ] Integration tests pass
    - [ ] Security scans pass
    - [ ] Performance tests pass
    - [ ] Compliance checks pass
    
    ## Aerospace/Defense Impact
    
    - [ ] No impact on safety-critical systems
    - [ ] No impact on mission-critical operations
    - [ ] No impact on compliance standards
    - [ ] Performance impact assessed
    - [ ] Security impact assessed
    
    ## Review Checklist
    
    - [ ] Code review completed
    - [ ] Security review completed
    - [ ] Compliance review completed
    - [ ] Performance impact assessed
    - [ ] Breaking changes identified
    - [ ] Migration guide updated (if needed)
    
    ## Auto-merge Status
    
    {{#if auto-merge}}
    ✅ **Auto-merge enabled** - This PR will be automatically merged when all checks pass.
    {{else}}
    ❌ **Auto-merge disabled** - Manual review required.
    {{/if}}
    
    ---
    
    *This PR was automatically created by Dependabot for aerospace/defense compliance.*
  
  # Labels
  labels:
    - "dependencies"
    - "automated"
    - "{{#if security-vulnerabilities}}security{{else}}maintenance{{/if}}"
  
  # Assignees
  assignees:
    - "@exonware/maintainers"
  
  # Reviewers
  reviewers:
    - "@exonware/security-team"
    - "@exonware/maintainers"

# Notification settings
notifications:
  # Security updates
  security:
    channels:
      - "security-team"
      - "maintainers"
    urgency: "high"
  
  # Regular updates
  regular:
    channels:
      - "maintainers"
    urgency: "normal"

# Compliance tracking
compliance:
  # Track dependency updates for compliance reporting
  tracking:
    enabled: true
    report-frequency: "weekly"
    include-security: true
    include-regular: true
  
  # Compliance requirements
  requirements:
    - "NASA-STD-8739.8: Software Assurance"
    - "ECSS-Q-ST-80C: Software Product Assurance"
    - "DO-178C: Aerospace Software Certification"
    - "NIST Cybersecurity Framework"
    - "ISO 27001: Information Security"

# Performance monitoring
performance:
  # Monitor update impact on performance
  monitoring:
    enabled: true
    metrics:
      - "build-time"
      - "test-time"
      - "deployment-time"
      - "runtime-performance"
  
  # Performance thresholds
  thresholds:
    build-time-increase: "10%"
    test-time-increase: "15%"
    deployment-time-increase: "20%"
    runtime-performance-decrease: "5%"

# Security scanning
security:
  # Security scanning configuration
  scanning:
    enabled: true
    tools:
      - "bandit"
      - "safety"
      - "semgrep"
      - "codeql"
      - "dependency-review"
  
  # Security thresholds
  thresholds:
    critical-vulnerabilities: 0
    high-vulnerabilities: 0
    medium-vulnerabilities: 5
    low-vulnerabilities: 10
  
  # Auto-remediation
  auto-remediation:
    enabled: false
    # Never auto-remediate for aerospace/defense applications
    require-approval: true
    require-testing: true
    require-compliance-check: true

# Testing requirements
testing:
  # Required test suites
  required:
    - "unit"
    - "integration"
    - "security"
    - "performance"
    - "compliance"
  
  # Test coverage requirements
  coverage:
    minimum: 80
    target: 90
    critical-paths: 100
  
  # Test execution
  execution:
    auto-run: true
    require-passing: true
    timeout: "30m"

# Documentation requirements
documentation:
  # Required documentation updates
  required:
    - "changelog"
    - "dependency-list"
    - "security-notes"
    - "compliance-notes"
  
  # Auto-generation
  auto-generation:
    enabled: true
    templates:
      - "dependency-update"
      - "security-update"
      - "compliance-update"

# Rollback strategy
rollback:
  # Rollback configuration
  enabled: true
  triggers:
    - "test-failure"
    - "security-vulnerability"
    - "performance-regression"
    - "compliance-violation"
  
  # Rollback process
  process:
    auto-rollback: false
    require-approval: true
    require-testing: true
    require-documentation: true

# Reporting
reporting:
  # Update reports
  updates:
    frequency: "weekly"
    format: "markdown"
    include:
      - "summary"
      - "details"
      - "impact"
      - "compliance"
      - "security"
      - "performance"
  
  # Compliance reports
  compliance:
    frequency: "monthly"
    format: "pdf"
    include:
      - "standards-compliance"
      - "vulnerability-status"
      - "update-history"
      - "performance-metrics"
      - "security-posture"

# Integration settings
integrations:
  # GitHub integration
  github:
    enabled: true
    features:
      - "issues"
      - "pull-requests"
      - "actions"
      - "security"
      - "dependabot"
  
  # External tools
  external:
    - name: "security-scanner"
      type: "webhook"
      url: "${{ secrets.SECURITY_SCANNER_WEBHOOK }}"
      events:
        - "dependency-update"
        - "security-vulnerability"
    
    - name: "compliance-checker"
      type: "webhook"
      url: "${{ secrets.COMPLIANCE_CHECKER_WEBHOOK }}"
      events:
        - "dependency-update"
        - "compliance-check"
    
    - name: "performance-monitor"
      type: "webhook"
      url: "${{ secrets.PERFORMANCE_MONITOR_WEBHOOK }}"
      events:
        - "dependency-update"
        - "performance-test"

# Maintenance schedule
maintenance:
  # Maintenance windows
  windows:
    - name: "weekly-maintenance"
      schedule: "monday 09:00-17:00 UTC"
      timezone: "UTC"
      auto-updates: true
    
    - name: "security-maintenance"
      schedule: "daily 06:00-08:00 UTC"
      timezone: "UTC"
      auto-updates: false
      require-approval: true
  
  # Maintenance tasks
  tasks:
    - name: "dependency-updates"
      frequency: "weekly"
      priority: "normal"
    
    - name: "security-updates"
      frequency: "daily"
      priority: "high"
    
    - name: "compliance-checks"
      frequency: "monthly"
      priority: "high"
    
    - name: "performance-monitoring"
      frequency: "weekly"
      priority: "normal"

# Error handling
error-handling:
  # Error notifications
  notifications:
    enabled: true
    channels:
      - "maintainers"
      - "security-team"
    urgency: "high"
  
  # Retry logic
  retry:
    enabled: true
    max-attempts: 3
    backoff: "exponential"
    max-delay: "1h"
  
  # Fallback strategies
  fallback:
    enabled: true
    strategies:
      - "manual-update"
      - "security-only"
      - "compliance-only"

# Compliance monitoring
compliance-monitoring:
  # Standards tracking
  standards:
    - name: "NASA-STD-8719.13"
      status: "monitored"
      last-check: "2024-01-01"
    
    - name: "NASA-STD-8739.8"
      status: "monitored"
      last-check: "2024-01-01"
    
    - name: "ECSS-Q-ST-80C"
      status: "monitored"
      last-check: "2024-01-01"
    
    - name: "DO-178C"
      status: "monitored"
      last-check: "2024-01-01"
  
  # Compliance checks
  checks:
    frequency: "daily"
    auto-fix: false
    require-approval: true
    include:
      - "dependency-vulnerabilities"
      - "license-compliance"
      - "security-compliance"
      - "performance-compliance"
      - "documentation-compliance"

# Performance optimization
performance-optimization:
  # Update batching
  batching:
    enabled: true
    max-batch-size: 10
    max-batch-delay: "1h"
    strategy: "smart"
  
  # Parallel processing
  parallel:
    enabled: true
    max-concurrent: 5
    max-concurrent-per-ecosystem: 3
  
  # Caching
  caching:
    enabled: true
    strategy: "aggressive"
    max-age: "24h"

# Security hardening
security-hardening:
  # Vulnerability scanning
  vulnerability-scanning:
    enabled: true
    frequency: "daily"
    tools:
      - "safety"
      - "pip-audit"
      - "bandit"
      - "semgrep"
  
  # Security policies
  security-policies:
    enabled: true
    policies:
      - "no-critical-vulnerabilities"
      - "no-high-vulnerabilities"
      - "security-review-required"
      - "compliance-check-required"
  
  # Threat modeling
  threat-modeling:
    enabled: true
    frequency: "monthly"
    include:
      - "dependency-threats"
      - "update-threats"
      - "deployment-threats"
      - "runtime-threats"

# Documentation generation
documentation-generation:
  # Auto-documentation
  auto-documentation:
    enabled: true
    formats:
      - "markdown"
      - "html"
      - "pdf"
  
  # Documentation templates
  templates:
    - name: "dependency-update"
      path: ".github/templates/dependency-update.md"
    
    - name: "security-update"
      path: ".github/templates/security-update.md"
    
    - name: "compliance-update"
      path: ".github/templates/compliance-update.md"
  
  # Documentation quality
  quality:
    enabled: true
    checks:
      - "completeness"
      - "accuracy"
      - "clarity"
      - "compliance"

# Monitoring and alerting
monitoring:
  # Health checks
  health-checks:
    enabled: true
    frequency: "hourly"
    checks:
      - "dependency-status"
      - "security-status"
      - "compliance-status"
      - "performance-status"
  
  # Alerting
  alerting:
    enabled: true
    channels:
      - "email"
      - "slack"
      - "webhook"
    rules:
      - name: "security-vulnerability"
        condition: "critical or high vulnerability detected"
        urgency: "immediate"
      
      - name: "compliance-violation"
        condition: "compliance check failed"
        urgency: "high"
      
      - name: "performance-regression"
        condition: "performance threshold exceeded"
        urgency: "medium"
      
      - name: "update-failure"
        condition: "dependency update failed"
        urgency: "high"

# Backup and recovery
backup-recovery:
  # Backup configuration
  backup:
    enabled: true
    frequency: "daily"
    retention: "30 days"
    include:
      - "dependency-lists"
      - "security-reports"
      - "compliance-reports"
      - "performance-metrics"
  
  # Recovery procedures
  recovery:
    enabled: true
    procedures:
      - "dependency-rollback"
      - "security-patch"
      - "compliance-fix"
      - "performance-optimization"
  
  # Disaster recovery
  disaster-recovery:
    enabled: true
    rto: "4 hours"
    rpo: "24 hours"
    procedures:
      - "full-system-restore"
      - "partial-system-restore"
      - "data-recovery"
      - "compliance-recovery"
