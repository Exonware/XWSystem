name: Security & Compliance Scan
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly security scan

env:
  PYTHON_VERSION: '3.9'
  SECURITY_SCAN_TIMEOUT: 1800  # 30 minutes

jobs:
  security-scan:
    name: Security & Compliance Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for security analysis
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety pip-audit semgrep
        
    - name: Run Bandit SAST
      run: |
        bandit -r src/ -f json -o bandit-report.json || true
        bandit -r src/ -f txt -o bandit-report.txt || true
        
    - name: Run Safety (dependency vulnerabilities)
      run: |
        safety check --json --output safety-report.json || true
        safety check --output safety-report.txt || true
        
    - name: Run pip-audit
      run: |
        pip-audit --format json --output pip-audit-report.json || true
        pip-audit --format text --output pip-audit-report.txt || true
        
    - name: Run Semgrep
      run: |
        semgrep scan --config auto --json --output semgrep-report.json || true
        semgrep scan --config auto --output semgrep-report.txt || true
        
    - name: Upload security artifacts
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.*
          safety-report.*
          pip-audit-report.*
          semgrep-report.*
        retention-days: 90
        
    - name: Security summary
      run: |
        echo "=== SECURITY SCAN COMPLETED ==="
        echo "Reports generated for:"
        echo "- Bandit SAST"
        echo "- Safety dependency scan"
        echo "- pip-audit"
        echo "- Semgrep"
        echo "Check artifacts for detailed results"

  dependency-review:
    name: Dependency Security Review
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Dependency Review
      uses: actions/dependency-review-action@v3
      with:
        fail-on-severity: high
        allow-licenses: |
          MIT
          Apache-2.0
          BSD-2-Clause
          BSD-3-Clause
          ISC
          Unlicense
        allow-ghsas: |
          GHSA-*
          CVE-*
          
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: python
        queries: security-extended,security-and-quality
        
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:python"
